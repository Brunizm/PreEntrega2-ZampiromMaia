{"ast":null,"code":"let cartItems = [];\nconst addItem = (item, quantity) => {\n  const existingItem = cartItems.find(cartItem => cartItem.id === item.id);\n  if (existingItem) {\n    existingItem.quantity += quantity; // ✅ Update quantity if the item is already in the cart\n  } else {\n    cartItems.push({\n      ...item,\n      quantity\n    }); // ✅ Add new item\n  }\n  console.log(\"Cart Updated:\", cartItems); // ✅ Debugging\n};\nconst getCartItems = () => cartItems; // ✅ Function to retrieve cart items\n\nexport { addItem, getCartItems };","map":{"version":3,"names":["cartItems","addItem","item","quantity","existingItem","find","cartItem","id","push","console","log","getCartItems"],"sources":["/Users/brunazampirommaia/Desktop/ProyectoFinal+ZampiromMaia/src/context/CartContext.js"],"sourcesContent":["let cartItems = [];\n\nconst addItem = (item, quantity) => {\n    const existingItem = cartItems.find(cartItem => cartItem.id === item.id);\n\n    if (existingItem) {\n        existingItem.quantity += quantity; // ✅ Update quantity if the item is already in the cart\n    } else {\n        cartItems.push({ ...item, quantity }); // ✅ Add new item\n    }\n\n    console.log(\"Cart Updated:\", cartItems); // ✅ Debugging\n};\n\nconst getCartItems = () => cartItems; // ✅ Function to retrieve cart items\n\nexport { addItem, getCartItems };\n"],"mappings":"AAAA,IAAIA,SAAS,GAAG,EAAE;AAElB,MAAMC,OAAO,GAAGA,CAACC,IAAI,EAAEC,QAAQ,KAAK;EAChC,MAAMC,YAAY,GAAGJ,SAAS,CAACK,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,EAAE,KAAKL,IAAI,CAACK,EAAE,CAAC;EAExE,IAAIH,YAAY,EAAE;IACdA,YAAY,CAACD,QAAQ,IAAIA,QAAQ,CAAC,CAAC;EACvC,CAAC,MAAM;IACHH,SAAS,CAACQ,IAAI,CAAC;MAAE,GAAGN,IAAI;MAAEC;IAAS,CAAC,CAAC,CAAC,CAAC;EAC3C;EAEAM,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEV,SAAS,CAAC,CAAC,CAAC;AAC7C,CAAC;AAED,MAAMW,YAAY,GAAGA,CAAA,KAAMX,SAAS,CAAC,CAAC;;AAEtC,SAASC,OAAO,EAAEU,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}